@using SES.Models;

@{
    ViewBag.Title = "Nhân viên bán hàng";
}


@Scripts.Render("~/Scripts/app/Company.js")
@Scripts.Render("~/Scripts/app/app.js")
@{
    var dict = Model != null ? (Dictionary<string, object>)Model : new Dictionary<string, object>();
    var asset = dict.ContainsKey("asset") ? (Dictionary<string, bool>)dict["asset"] : new Dictionary<string, bool>();
    var listActiveStatus = dict.ContainsKey("activestatus") ? (List<ActiveStatus>)dict["activestatus"] : new List<ActiveStatus>();
    var listSalesPerson = dict.ContainsKey("listSalesPerson") ? (List<Company>)dict["listSalesPerson"] : new List<Company>();
}
<style>
    .ace-file-input {
        position: relative;
        height: 38px;
        line-height: 38px;
        margin-bottom: 9px;
    }
</style>

<style>
    .ace-file-input {
        position: relative;
        height: 38px;
        line-height: 38px;
        margin-bottom: 9px;
    }
</style>

<section>
    @if (Auth_Action.AssetResult(asset, "Search"))
    {
        <div class="row divSearch">
            <div class="col-sm-12">
                <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-deletebutton="false">
                    <header>
                        @*<span class="widget-icon"> <i class="fa fa-search"></i> </span>*@
                        <h2 style="color:#6fb3e0">Tìm kiếm</h2>
                    </header>
                    <div>
                        <div class="widget-body no-padding">
                            <form class="smart-form">
                                <fieldset>
                                    <div class="row">
                                        @if (Auth_Action.AssetResult(asset, "SalesPersonName"))
                                        {
                                            <section class="col col-3">
                                                <label class="input">
                                                    <input type="text" class="input-xs" id="txtSalesPersonID" placeholder="Mã,Tên nhân viên">
                                                </label>
                                            </section>
                                        }
                                     
                                        @if (Auth_Action.AssetResult(asset, "Status"))
                                        {
                                            <section class="col col-3search">
                                                <label class="select">
                                                    @Html.DropDownList("selectStatus_search", new SelectList(listActiveStatus, "StatusValue", "StatusName"), "-- Chọn trạng thái --")
                                                </label>
                                            </section>
                                        }
                                        <section class="col col-3search">
                                            <a class="k-button k-button-icontext btn_customSearch" href="javascript:void(0);" onclick="doSearch()">Tìm kiếm</a>
                                        </section>
                                    </div>
                                </fieldset>
                            </form>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    
    <div class="jarviswidget">
        <header>
            <h2 style="color:#6fb3e0">Công ty</h2>
        </header>
        <div class="row">
            <article class="col-sm-12">
                <div class="widget-body">
                    @(Html.Kendo().Grid<SES.Models.SalesPerson>()
                    .Name("grid")
                    .Columns(columns =>
                    {
                        if (asset.ContainsKey("Update") && asset["Update"])
                        {
                            columns.Bound(p => p.SalesPersonID).HtmlAttributes(new { data_id = "#=SalesPersonID#", onclick = "onOpenPopup(1,this)", @style = "color:\\#428bca;cursor:pointer;text-decoration:underline" }).Title("Mã công ty").Width(110);
                        }
                        else
                        {
                            columns.Bound(p => p.SalesPersonID).Title("Mã nhân viên").Width(100);
                        }
                        if (Auth_Action.AssetResult(asset, "SalesPersonName"))
                        {
                            columns.Bound(p => p.SalesPersonName).Title("Tên nhân viên").HtmlAttributes(new { data_column = "SalesPersonName" }).Width(150);
                        }
                        columns.Bound(p => p.Phone).Title("Số điện thoại").Width(100);
                        columns.Bound(p => p.Email).Title("Email").Width(100);
                        columns.Bound(p => p.Address).Title("Địa chỉ").Width(100);
                        if (Auth_Action.AssetResult(asset, "Status"))
                        {
                            columns.Bound(p => p.Status).Title("Trạng thái").HtmlAttributes(new { data_column = "IsActive" }).Width(130);
                        }
                        columns.Bound(p => p.CreatedBy).Title("Người tạo").Width(110);
                        columns.Bound(p => p.CreatedAt).Width(110).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align:right" }).Title("Ngày tạo").Width(110);
                        columns.Bound(p => p.UpdatedBy).Title("Người cập nhật").Width(110);
                        columns.Bound(o => o.UpdatedAt).Title("Ngày cập nhật").Format("{0:dd/MM/yyyy}").Width(110).ClientTemplate("#if(kendo.toString(UpdatedAt,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(UpdatedAt,'dd/MM/yyyy') #" + "#}#").HtmlAttributes(new { style = "text-align:right" });
                    })
                    .ToolBar(toolBar =>
                        {
                            if (asset.ContainsKey("Insert") && asset["Insert"])
                            {
                                toolBar.Custom()
                                        .Text("Thêm mới")
                                        .HtmlAttributes(new { id = "btnInsert", @class = "btn btn-success", @style = "background-color:#87b87f; color:white;", onclick = "onOpenPopup(0,this)", @href = "javascript:void(0)" });
                            }
                            if (asset.ContainsKey("Export") && asset["Export"])
                            {
                                toolBar.Custom()
                                        .Text("Xuất Excel")
                                        .HtmlAttributes(new { @class = "btn btn-primary export", @style = "background-color:#428bca; color:white;" }).Url(Url.Action("Export", "Company", new { filter = "~", sort = "~", SalesPersonID = "~" }));
                            }
                        })
                    .Events(events => { events.DataBound("onDatabound"); })
                    .Pageable(pager => pager.PageSizes(new[] { 20, 100, 200, 300 }))
                    .Resizable(r => r.Columns(true))
                    .Navigatable()
                    .Scrollable()
                    .Sortable()
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Batch(true)
                        .PageSize(100)
                        .Model(model =>
                        {
                            model.Id(p => p.SalesPersonID);
                        })
                        //.Events(e => { e.RequestEnd("onRequestEnd"); e.RequestStart("onRequestStart"); })
                        .Read(read => read.Action("Read", "SalesPerson"))
                    )
                    )
                </div>
            </article>
        </div>
    </div>
</section>