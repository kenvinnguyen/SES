@using SES.Models;
@{
    var dict = Model != null ? (Dictionary<string, object>)Model : new Dictionary<string, object>();
    var asset = dict.ContainsKey("asset") ? (Dictionary<string, bool>)dict["asset"] : new Dictionary<string, bool>();
    var listActiveStatus = dict.ContainsKey("activestatus") ? (List<ActiveStatus>)dict["activestatus"] : new List<ActiveStatus>();
   
}
<script src="@Url.Content("~/Scripts/app/AdminMasterTerritory.js")"></script>
<script src="@Url.Content("~/Scripts/app/app.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.blockUI.js")"></script>
<div>
    @if (Auth_Action.AssetResult(asset, "Search"))
    {

        <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-deletebutton="false">

            <header>
                @*<span class="widget-icon"> <i class="fa fa-search"></i> </span>*@
                <h2 style="color:#6fb3e0">Tìm kiếm</h2>

            </header>
            <nav style="border-width: 1px 1px 2px 1px; border-style: solid; border-top: none; border-color: #CCC;">
                <!-- widget content -->
                <div class="widget-body no-padding" style="margin: 0">
                    <form class="smart-form">
                        <fieldset>
                            <div class="row">

                                @if (Auth_Action.AssetResult(asset, "TerritoryID"))
                                {
                                    <section class="col col-3">
                                        <label class="input">
                                            <input type="text" class="input-xs" id="txtTerritoryIDDistrict" placeholder="Mã, tên quận huyện">
                                        </label>
                                    </section>
                                    <section class="col col-3">
                                        <label class="input">
                                            <input type="text" class="input-xs" id="txtTerritoryIDDistrictParent" placeholder="Tỉnh thành">
                                        </label>
                                    </section>
                                }

                                <section class="col col-3search">
                                    <a class="k-button k-button-icontext btn_customSearch" href="javascript:void(0);" onclick="doSearchDistrict()">Tìm kiếm</a>
                                </section>
                            </div>
                        </fieldset>
                    </form>

                </div>
                <!-- end widget content -->

            </nav>

        </div>
    }
</div>
<div class="jarviswidget">
    <header>
        <h2 style="color:#6fb3e0">Danh sách Quận/Huyện</h2>
    </header>

    <div class="row">
        <!-- NEW COL START -->
        <article class="col-sm-12">
            <div class="widget-body">
                @(Html.Kendo().Grid<SES.Models.Master_Territory>()
                    .Name("gridDistrict")
                    .Columns(columns =>
                    {

                        if (Auth_Action.AssetResult(asset, "TerritoryID"))
                        {
                            columns.Bound(p => p.TerritoryID).Title("Mã quận huyện").Width(150);
                        }
                        if (Auth_Action.AssetResult(asset, "TerritoryName"))
                        {
                            columns.Bound(p => p.TerritoryName).Title("Tên").Width(150);
                        }
                        if (Auth_Action.AssetResult(asset, "ParentName"))
                        {
                            columns.Bound(p => p.ParentName).Title("Tỉnh thành").Width(150);
                        }
                        if (Auth_Action.AssetResult(asset, "Title"))
                        {
                            columns.Bound(p => p.Title).Title("Loại").Width(150);
                        }
                        if (Auth_Action.AssetResult(asset, "Note"))
                        {
                            columns.Bound(p => p.Note).Title("Ghi chú").Width(200);
                        }
                        //if (Auth_Action.AssetResult(asset, "Latitude"))
                        //{
                        //    columns.Bound(p => p.Latitude).Title("Kinh độ").HtmlAttributes(new { @style = "text-align:right" }).Width(150);
                        //}
                        //if (Auth_Action.AssetResult(asset, "Longitude"))
                        //{
                        //    columns.Bound(p => p.Longitude).Title("Vĩ độ").HtmlAttributes(new { @style = "text-align:right" }).Width(150);
                        //}
                    })
                    .ToolBar(toolBar =>
                        {

                            if (asset.ContainsKey("Export") && asset["Export"])
                            {
                                toolBar.Custom()
                                        .Text("Xuất Excel")
                                        .HtmlAttributes(new { @class = "export", @style = "background-color:#6FB3e0; color:white;" }).Url(Url.Action("Export_District", "AdminMasterTerritory", new { filter = "~", sort = "~" }));
                            }

                        })
                        .Events(events => { events.DataBound("onDataboundDistrict"); })
                    .Pageable(pager => pager.PageSizes(new[] { 20, 100, 200, 300 }))
                    .Resizable(r => r.Columns(true))
                    .Navigatable()
                    .Scrollable()
                    .Sortable()
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Batch(true)
                        .PageSize(100)
                        .Model(model =>
                        {
                            model.Id(p => p.TerritoryID);
                        })
                        .Events(e => { e.RequestEnd("onRequestEnd"); e.RequestStart("onRequestStart"); })
                                            .Read(read => read.Action("Read_District", "AdminMasterTerritory"))
                    )
                )
            </div>
        </article>
        <!-- END COL -->

    </div>
</div>
